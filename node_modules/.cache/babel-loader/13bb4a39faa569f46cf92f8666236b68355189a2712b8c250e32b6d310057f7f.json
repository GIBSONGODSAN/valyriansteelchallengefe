{"ast":null,"code":"var _jsxFileName = \"E:\\\\ValyrianSteel-FE\\\\valyriansteelfe\\\\src\\\\components\\\\UpdateScore.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateScore = () => {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [selectedTeam, setSelectedTeam] = useState('');\n  const [eventScores, setEventScores] = useState({});\n  const [selectedEvent, setSelectedEvent] = useState('');\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    // Fetch the teams when the component mounts\n    axios.get('https://valyriansteelchallenge.onrender.com/teams').then(response => {\n      const sortedTeams = response.data.map(team => team.teamname).sort();\n      setTeams(sortedTeams);\n    }).catch(error => {\n      console.error('Error fetching teams:', error);\n    });\n  }, []);\n  const handleTeamChange = e => {\n    const team = e.target.value;\n    setSelectedTeam(team);\n\n    // Fetch the event scores for the selected team\n    axios.get(`https://valyriansteelchallenge.onrender.com/gamer/${team}`).then(response => {\n      const events = response.data.eventScores;\n      // Filter events that have a value of 0\n      const filteredEvents = Object.entries(events).filter(([key, value]) => value === 0);\n      setEventScores(Object.fromEntries(filteredEvents));\n    }).catch(error => {\n      console.error('Error fetching event scores:', error);\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Create the request body\n    const requestBody = {\n      id: '030942a0-043d-42da-8e73-4b33abd2ff6c',\n      // Sample ID, you may need to change this as per your data\n      teamname: selectedTeam,\n      eventName: selectedEvent,\n      score: parseInt(score, 10)\n    };\n\n    // Send the POST request\n    axios.post('https://valyriansteelchallenge.onrender.com/gamer/score', requestBody).then(response => {\n      console.log('Score submitted successfully:', response.data);\n    }).catch(error => {\n      console.error('Error submitting score:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select a Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleTeamChange,\n      value: selectedTeam,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), teams.map((team, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: team,\n        children: team\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), Object.keys(eventScores).length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select an Event Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedEvent(e.target.value),\n        value: selectedEvent,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), Object.keys(eventScores).map((event, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: event,\n          children: event\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), selectedEvent && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Enter a Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: score,\n          onChange: e => setScore(e.target.value),\n          placeholder: \"Enter a score\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateScore, \"fxoGqOasVMo3W3avEjXwaCOHL3U=\");\n_c = UpdateScore;\nexport default UpdateScore;\nvar _c;\n$RefreshReg$(_c, \"UpdateScore\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateScore","_s","teams","setTeams","selectedTeam","setSelectedTeam","eventScores","setEventScores","selectedEvent","setSelectedEvent","score","setScore","get","then","response","sortedTeams","data","map","team","teamname","sort","catch","error","console","handleTeamChange","e","target","value","events","filteredEvents","Object","entries","filter","key","fromEntries","handleSubmit","preventDefault","requestBody","id","eventName","parseInt","post","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","index","keys","length","event","onSubmit","type","placeholder","required","_c","$RefreshReg$"],"sources":["E:/ValyrianSteel-FE/valyriansteelfe/src/components/UpdateScore.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UpdateScore = () => {\r\n  const [teams, setTeams] = useState([]);\r\n  const [selectedTeam, setSelectedTeam] = useState('');\r\n  const [eventScores, setEventScores] = useState({});\r\n  const [selectedEvent, setSelectedEvent] = useState('');\r\n  const [score, setScore] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Fetch the teams when the component mounts\r\n    axios\r\n      .get('https://valyriansteelchallenge.onrender.com/teams')\r\n      .then(response => {\r\n        const sortedTeams = response.data\r\n          .map(team => team.teamname)\r\n          .sort();\r\n        setTeams(sortedTeams);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching teams:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleTeamChange = (e) => {\r\n    const team = e.target.value;\r\n    setSelectedTeam(team);\r\n\r\n    // Fetch the event scores for the selected team\r\n    axios\r\n      .get(`https://valyriansteelchallenge.onrender.com/gamer/${team}`)\r\n      .then(response => {\r\n        const events = response.data.eventScores;\r\n        // Filter events that have a value of 0\r\n        const filteredEvents = Object.entries(events).filter(\r\n          ([key, value]) => value === 0\r\n        );\r\n        setEventScores(Object.fromEntries(filteredEvents));\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching event scores:', error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create the request body\r\n    const requestBody = {\r\n      id: '030942a0-043d-42da-8e73-4b33abd2ff6c', // Sample ID, you may need to change this as per your data\r\n      teamname: selectedTeam,\r\n      eventName: selectedEvent,\r\n      score: parseInt(score, 10),\r\n    };\r\n\r\n    // Send the POST request\r\n    axios\r\n      .post('https://valyriansteelchallenge.onrender.com/gamer/score', requestBody)\r\n      .then(response => {\r\n        console.log('Score submitted successfully:', response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error submitting score:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Select a Team</h1>\r\n      <select onChange={handleTeamChange} value={selectedTeam}>\r\n        <option value=\"\">Select a team</option>\r\n        {teams.map((team, index) => (\r\n          <option key={index} value={team}>\r\n            {team}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {Object.keys(eventScores).length > 0 && (\r\n        <>\r\n          <h2>Select an Event Score</h2>\r\n          <select onChange={(e) => setSelectedEvent(e.target.value)} value={selectedEvent}>\r\n            <option value=\"\">Select an event</option>\r\n            {Object.keys(eventScores).map((event, index) => (\r\n              <option key={index} value={event}>\r\n                {event}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          {selectedEvent && (\r\n            <form onSubmit={handleSubmit}>\r\n              <h3>Enter a Score</h3>\r\n              <input\r\n                type=\"number\"\r\n                value={score}\r\n                onChange={(e) => setScore(e.target.value)}\r\n                placeholder=\"Enter a score\"\r\n                required\r\n              />\r\n              <button type=\"submit\">Submit</button>\r\n            </form>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateScore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}